#!/bin/bash

if [ $(pgrep -c jeeves) -gt 1 ]; then
    exit
fi

#TODO:
# get font height to calculate rows
# move to screen coords


icons=(" " " " " " "IV" "V" "VI" "VII" "VIII" " " " ")
urg=$(tput setaf 200)
occ=$(tput setaf 203)
cur=$(tput setaf 202)
res=$(tput sgr0)
bold=$(tput bold)
bkg=$(tput setab 203)
cols=$(tput cols)
horiz=$(for i in $(seq 1 $cols); do printf "%.0s"; done; echo "")
last_urgent=""

update () {

    urgent=""
    [ $1 ] &&
        wm_status=$1 ||
        wm_status=$(bspc control --get-status)

    timedate="$bold"$(figlet -ct $(date "+%I : %M %P"))"\n"
    timedate+="  $(date '+%a, %b %d %Y')$res"

    power=$(cat /sys/class/power_supply/BAT0/capacity)
    power_status="$(cat /sys/class/power_supply/BAT0/status)"
    [ $power -le 19 ] && urgent+="P"
    [ $power -ge 0 ]  && power_icon="$urg$res"
    [ $power -ge 20 ] && power_icon=""
    [ $power -ge 40 ] && power_icon=""
    [ $power -ge 60 ] && power_icon=""
    [ $power -ge 80 ] && power_icon=""
    [ "$power_status" == "Charging" ] && power_icon="$cur$res"

    vol=$(amixer get -M Master)
    [ "$(grep 'off' <<< $vol)" != "" ] &&
        vol_level="\t(Mute)" ||
        vol_level="\t($(amixer get -M Master | grep -oP '(?<=\[).*?(?=\%\])')%)"

    eth=$(connmanctl services | grep -oP '(?<=AR\ ).*?(?=\ *?ethernet)')
    [ "$eth" == "Wired" ] &&
        eth_speed="\t($eth)" ||
        eth_speed=""

    wifi=$(connmanctl services | grep -oP '(?<=AO\ ).*?(?=\ *?wifi)')
    [ "$wifi" != "" ] &&
        wifi_ssid="\t($wifi)" ||
        wifi_ssid=""

    caps=$(xset -q | grep -oP '(?<=Caps\ Lock\:).*?(?=0)' | sed -e 's/ //g')
    [ "$caps" == "on" ] &&
        caps="" ||
        caps=""

    vpn=""
    unlocked=""

    desktops=($(grep -oP '(?<=\:)..(?=\:)' <<< "$wm_status"))
    desktop_status=""
    dtop=1
    cur_desktop=$(bspc query -D -d)
    monitors=$(bspc query -M | wc -l)

    for desktop in ${desktops[@]}
    do

        [ $dtop -eq $cur_desktop ] && [ $monitors -gt 1 ] &&
            icon="${icons[$(($dtop - 1))]}" ||
            icon=" ${icons[$(($dtop -1 ))]} "

        case $desktop in
            "o"*) desktop_status+=" ${occ}$icon${res} ";;
            "O"*|"F"*) desktop_status+=" ${cur}$icon${res} ";;
            "u"*|"U"*)
                desktop_status+=" ${urg}$icon${res} "
                urgent+=$dtop
                ;;
            "L"*)
                desktop_status+="\t"
                dtop=$(($dtop - 1))
        esac

        dtop=$(($dtop + 1))
    done

    if [ "$urgent" != "$last_urgent" ] && [ "$urgent" != "" ]; then
        scratchpad jeeves show
    fi
    last_urgent=$urgent
    urgent=""

    # output
    output="$desktop_status\n"
    output+="$horiz\n"
    output+="$timedate\n\n"
    output+="$horiz\n"
    output+="  $power_icon\t($power%)\n"
    output+="  $vol_level\n"
    [ "$wifi" != "" ] && output+="  $wifi_ssid\n"
    [ "$eth" == "Wired" ] && output+="  $eth_speed\n"
    [ -e /tmp/vpn ] && output+="  $vpn\n"
    [ -e /tmp/xautolock-disable ] && output+="  $unlocked\n"
    [ "$caps" != "" ] && output+="  $caps\n"

    rows=$(($(grep -o '\n' <<< "$output" | wc -l) + 10))
    output=$(sed -e 's/\\n$//g' <<< "$output")
    clear
    echo -en "$output"
    xdotool search --name jeeves windowsize 400 $(($rows * 14))
}

tput civis
xdotool search --name jeeves set_window --overrideredirect 1
bspc control --subscribe | while read -r line; do update $line; done &
while :; do
    [ "$(xdotool search --onlyvisible --name jeeves)" ] && update
    sleep 2;
done
wait
