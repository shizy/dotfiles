# vim: ft=conf
#
# In this config file, qutebrowser's key bindings are configured.
# The format looks like this:
#
# [keymode]
#
# command
#   keychain
#   keychain2
#   ...
#
# All blank lines and lines starting with '#' are ignored.
# Inline-comments are not permitted.
#
# keymode is a comma separated list of modes in which the key binding should be
# active. If keymode starts with !, the key binding is active in all modes
# except the listed modes.
#
# For special keys (can't be part of a keychain), enclose them in `<`...`>`.
# For modifiers, you can use either `-` or `+` as delimiters, and these names:
#
#  * Control: `Control`, `Ctrl`
#  * Meta:    `Meta`, `Windows`, `Mod4`
#  * Alt:     `Alt`, `Mod1`
#  * Shift:   `Shift`
#
# For simple keys (no `<>`-signs), a capital letter means the key is pressed
# with Shift. For special keys (with `<>`-signs), you need to explicitly add
# `Shift-` to match a key pressed with shift.
#
# Note that default keybindings are always bound, and need to be explicitly
# unbound if you wish to remove them:
#
# <unbound>
#   keychain
#   keychain2
#   ...

[!normal]

leave-mode
    <escape>
    <ctrl-[>

[normal]
# Keybindings for normal mode.

set-cmd-text -s :buffer
    <alt-space>

hint links spawn mpv {hint-url}
    <alt-v>

spawn mpv {url}
    <alt-shift-v>

spawn -u ~/local/config/qutebrowser/userscripts/proxy.sh
    <alt-shift-p>

clear-keychain ;; search
    <escape>

set-cmd-text -s :open
    o

set-cmd-text :open {url}
    <shift-o>

set-cmd-text -s :open -t
    <alt-o>

set-cmd-text :open -t {url}
    <alt-shift-o>

set-cmd-text -s :open -b
    xo

set-cmd-text :open -b {url}
    xO

set-cmd-text -s :open -w
    wo

set-cmd-text :open -w {url}
    wO

open -t
    ga
    <ctrl-t>

tab-close
    <alt-x>

tab-close -o
    D

tab-only
    co

tab-focus
    J
    gt

tab-move
    gm

tab-move -
    gl

tab-move +
    gr

tab-prev
    <alt-h>

tab-next
    <alt-l>

tab-clone
    gC

reload
    <alt-r>

reload -f
    <alt-shift-r>

back
    u

back -t
    th

back -w
    wh

forward
    <alt-u>

forward -t
    tl

forward -w
    wl

fullscreen
    <alt-return>

hint
    f

hint all window
    <alt-shift-f>

hint all tab-bg
    <alt-f>

hint all hover
    ;h

hint images
    ;i

hint images tab
    ;I

hint images tab-bg
    .i

hint links fill :open {hint-url}
    ;o

hint links fill :open -t {hint-url}
    ;O

hint links fill :open -b {hint-url}
    .o

hint links yank
    ;y

hint links yank-primary
    ;Y

hint --rapid links tab-bg
    ;r

hint --rapid links window
    ;R

hint links download
    ;d

scroll left
    h

scroll-page 0 0.05
    j

scroll-page 0 -0.05
    k

scroll right
    l

undo
    <ctrl-shift-t>

scroll-perc 0
    gg

scroll-perc
    G

search-next
    n

search-prev
    <alt-n>

enter-mode insert
    i

enter-mode caret
    v

yank
    yy

yank -s
    yY

yank title
    yt

yank title -s
    yT

yank domain
    yd

yank domain -s
    yD

open -- {clipboard}
    pp

open -- {primary}
    pP

open -t -- {clipboard}
    Pp

open -t -- {primary}
    PP

open -w -- {clipboard}
    wp

open -w -- {primary}
    wP

quickmark-save
    m

set-cmd-text -s :quickmark-load
    b

set-cmd-text -s :quickmark-load -t
    B

set-cmd-text -s :quickmark-load -w
    wb

bookmark-add
    M

set-cmd-text -s :bookmark-load
    gb

set-cmd-text -s :bookmark-load -t
    gB

set-cmd-text -s :bookmark-load -w
    wB

save
    sf

set-cmd-text -s :set
    ss

set-cmd-text -s :set -t
    sl

set-cmd-text -s :bind
    sk

zoom-out
    -

zoom-in
    +

zoom
    =

navigate prev
    <alt-,>

navigate next
    <alt-.>

navigate prev -t
    {{

navigate next -t
    }}

navigate up
    gu

navigate up -t
    gU

navigate increment
    <ctrl-a>

navigate decrement
    <ctrl-x>

inspector
    wi

download
    <alt-w>

download-cancel
    <alt-shift-w>

download-clear
    <alt-/>

view-source
    gf

tab-focus last
    <alt-tab>

enter-mode passthrough
    <ctrl-v>

quit
    <alt-z>

scroll-page 0 1
    <ctrl-f>

scroll-page 0 -1
    <ctrl-b>

scroll-page 0 0.5
    <alt-j>

scroll-page 0 -0.5
    <alt-k>

tab-focus 1
    <alt-1>

tab-focus 2
    <alt-2>

tab-focus 3
    <alt-3>

tab-focus 4
    <alt-4>

tab-focus 5
    <alt-5>

tab-focus 6
    <alt-6>

tab-focus 7
    <alt-7>

tab-focus 8
    <alt-8>

tab-focus 9
    <alt-9>

home
    <ctrl-h>

stop
    <alt-s>

print
    <ctrl-alt-p>

open qute:settings
    Ss

follow-selected
    <return>
    <ctrl-m>
    <ctrl-j>
    <shift-return>
    <enter>
    <shift-enter>

follow-selected -t
    <ctrl-return>
    <ctrl-enter>

set-cmd-text :open {url:pretty}
    go

set-cmd-text :open -t {url:pretty}
    gO

open -w
    <ctrl-n>

enter-mode set_mark
    `

enter-mode jump_mark
    '

yank pretty-url
    yp

yank pretty-url -s
    yP

hint inputs
    ;t

repeat-command
    .

set-cmd-text /
    /

set-cmd-text ?
    ?

set-cmd-text :
    :

hint all tab
    F

hint all tab-fg
    ;f

record-macro
    q

run-macro
    @

[insert]
# Keybindings for insert mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `open-editor`: Open a texteditor with the focused field.
#  * `paste-primary`: Paste primary selection at cursor position.

open-editor
    <ctrl-e>

leave-mode
    jj

insert-text {primary}
    <shift-ins>

[hint]
# Keybindings for hint mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `follow-hint`: Follow the currently selected hint.

follow-hint
    <return>
    <ctrl-m>
    <ctrl-j>
    <shift-return>
    <enter>
    <shift-enter>

hint --rapid links tab-bg
    <ctrl-r>

hint links
    <ctrl-f>

hint all tab-bg
    <ctrl-b>

[command]
# Keybindings for command mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `command-history-prev`: Switch to previous command in history.
#  * `command-history-next`: Switch to next command in history.
#  * `completion-item-focus`: Select another item in completion.
#  * `command-accept`: Execute the command currently in the commandline.

command-history-prev
    <alt-shift-k>

command-history-next
    <alt-shift-j>

completion-item-focus prev
    <shift-tab>
    <up>
    <alt-k>

completion-item-focus next
    <tab>
    <down>
    <alt-j>

completion-item-del
    <ctrl-d>

command-accept
    <return>
    <ctrl-m>
    <ctrl-j>
    <shift-return>
    <enter>
    <shift-enter>
    jk

completion-item-focus next-category
    <ctrl-tab>

completion-item-focus prev-category
    <ctrl-shift-tab>

[prompt]
# Keybindings for prompts in the status line.
# You can bind normal keys in this mode, but they will be only active
# when a yes/no-prompt is asked. For other prompt modes, you can only
# bind special keys.
# Useful hidden commands to map in this section:
#  * `prompt-accept`: Confirm the entered value.
#  * `prompt-accept yes`: Answer yes to a yes/no question.
#  * `prompt-accept no`: Answer no to a yes/no question.

prompt-accept
    <return>
    <ctrl-m>
    <ctrl-j>
    <shift-return>
    <enter>
    <shift-enter>
    jk

prompt-accept yes
    y

prompt-accept no
    n

prompt-open-download
    <ctrl-x>

prompt-item-focus prev
    <shift-tab>
    <up>

prompt-item-focus next
    <tab>
    <down>

[command,prompt]

leave-mode
    jj

rl-backward-char
    <ctrl-b>

rl-forward-char
    <ctrl-f>

rl-backward-word
    <alt-h>

rl-forward-word
    <alt-l>

rl-beginning-of-line
    <alt-shift-h>

rl-end-of-line
    <alt-shift-l>

rl-unix-line-discard
    <ctrl-u>

rl-kill-line
    <alt-shift-x>

rl-kill-word
    <alt-x>

rl-unix-word-rubout
    <ctrl-w>

rl-backward-kill-word
    <alt-backspace>

rl-yank
    <ctrl-y>

rl-delete-char
    <ctrl-?>

rl-backward-delete-char
    <ctrl-h>

[caret]

toggle-selection
    v
    <space>

drop-selection
    <ctrl-space>

enter-mode normal
    c

move-to-next-line
    j

move-to-prev-line
    k

move-to-next-char
    l

move-to-prev-char
    h

move-to-end-of-word
    e

move-to-next-word
    w

move-to-prev-word
    b

move-to-start-of-next-block
    ]

move-to-start-of-prev-block
    [

move-to-end-of-next-block
    }

move-to-end-of-prev-block
    {

move-to-start-of-line
    0

move-to-end-of-line
    $

move-to-start-of-document
    gg

move-to-end-of-document
    G

yank selection -s
    Y

yank selection
    y
    <return>
    <ctrl-m>
    <ctrl-j>
    <shift-return>
    <enter>
    <shift-enter>

scroll left
    H

scroll down
    J

scroll up
    K

scroll right
    L

