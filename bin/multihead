#!/bin/bash

source $XDG_CONFIG_HOME/zsh/.zprofile

declare -A monitor

output=$(xrandr)
monitor_stats=($(grep -zoP '([\* |\ ]\+)|(disconnected\ )' <<< "$output" | sed -e 's/[\*|\ ]+/connected\ /g'))
monitor_names=($(grep -zoP '.*?\ (?=(dis)?connected)' <<< "$output"))
connections=$(grep -o '\bconnected' <<< "${monitor_stats[@]}" | wc -l)
l=0
d=0

oIFS="$IFS"; IFS=':'
read -r -a layouts <<< "$MONITOR_LAYOUTS"
read -r -a desktop <<< "$MONITOR_DESKTOP"
IFS="$oIFS"
lid_state=$(cat /proc/acpi/button/lid/LID*/state | grep -oP '\s\K\w+')

# ensure laptop screen works if no other screen is connected
if [[ "$lid_state" != "closed" ]] && [ $connections -lt 1 ]; then
    xrandr --output ${monitor_names[0]} --auto
    bspc monitor ${monitor_names[0]} -d ${desktop[@]}
    exit
fi

# skip first layout if the laptop screen is closed
if [[ "$lid_state" == "closed" ]]; then
    monitor_stats[0]="disconnected"
    l=1
fi

last_connected=""
for ((i=0; i < ${#monitor_names[@]}; i++))
do
    if [[ "${monitor_stats[$i]}" == "connected" ]]; then
        xrandr --output ${monitor_names[$i]} --auto
        echo "xrandr --output ${monitor_names[$i]} --auto"
        if [ $l -lt ${#layouts[@]} ]; then
            xrandr --output ${monitor_names[$i]} ${layouts[$l]}
            echo "xrandr --output ${monitor_names[$i]} ${layouts[$l]}"
            ((l++))
        fi
        if [ $d -lt ${#desktop[@]} ]; then
            bspc monitor ${monitor_names[$i]} -d ${desktop[@]:$d}
            echo "bspc monitor ${monitor_names[$i]} -d ${desktop[@]:$d}"
            if [ $d -gt 0 ]; then
                bspc monitor $last_connected -d ${desktop[$((d-1))]}
                echo "bspc monitor $last_connected -d ${desktop[$((d-1))]}"
            fi
            last_connected=${monitor_names[$i]}
            ((d++))
        fi
    else
        xrandr --output ${monitor_names[$i]} --off
        echo "xrandr --output ${monitor_names[$i]} --off"
    fi
done

sleep 2
systemctl --user restart panel
