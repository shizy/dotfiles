#!/bin/bash
source $XDG_CONFIG_HOME/zsh/.zprofile

WM_FIFO=$XDG_RUNTIME_DIR/wm.fifo
FIFO_TOP=$XDG_RUNTIME_DIR/top.fifo
FIFO_BOT=$XDG_RUNTIME_DIR/bot.fifo
declare -A monitor
cur_monitor=0
primary=''
icons=(${DESKTOP_ICONS//:/ })
urg='%{F'$COLOR_URGENT'}'
cur='%{F'$COLOR_NOTIFY'}'
occ='%{F#383838}'
res='%{F-}'

get_monitor_info() {
    monitors=($(bspc query -M))
    query=$(xrandr | grep \ connected)
    primary="${monitors[0]}"
    for name in "${monitors[@]}"
    do
        monitor[$name]=$(grep $name <<< "$query" | grep -oP '\w+x\w+\+\w+\+\w+' | sed -e 's/[x|+]/\ /g')
    done
}

show () {
    [ ${#monitor[@]} -eq 1 ] && res=($(get_preset $1 $primary)) || res=($(get_preset $1 $(bspc query -M -m)))
    xdotool search --any --class --name $1 windowmap windowmove ${res[0]} ${res[1]} windowsize ${res[3]} ${res[2]}
}

hide () {
    bspc node $(printf "0x%x\n" $(xdotool search --any --class --name $1) | head -n 1) -d focused -f
    [ $? -gt 0 ] &&
         xdotool search --onlyvisible --any --class --name $1 windowunmap %@
}

create () {
    [ ${#monitor[@]} -eq 1 ] && res=($(get_preset $1 $primary)) || res=($(get_preset $1 $(bspc query -M -m)))
    [ $2 ] && cmd=" -e $2 &" || cmd=''
    exec ${res[@]:4} $cmd &
    xdotool search --any --class --name $1 windowmap windowmove ${res[0]} ${res[1]} windowsize ${res[3]} ${res[2]}
}

get_preset() {
    res=(${monitor[$2]})
    w_top=$((${res[3]} + 1))
    w_left=${res[2]}
    #res [width][height][x offset][y offset]

    case $1 in
        "scratchtop")
            x=$w_left
            y=$w_top
            h=$((${res[1]} / 2))
            w=${res[0]}
            create="termite --geometry ${w}x${h}+${x}+${y} --title=$1"
            ;;
        "scratchbottom" | "scratchsearch")
            x=$w_left
            y=$(((${res[1]} / 2) + $w_top))
            h=$((${res[1]} / 2))
            if [ $1 == "scratchsearch" ]; then
                y=$((${res[1]} - (${res[1]} / 3) + $w_top))
                h=$((${res[1]} / 3))
            fi
            w=${res[0]}
            create="termite --geometry ${w}x${h}+${x}+${y} --title=$1"
            ;;
        "scratchleft")
            x=$w_left
            y=$w_top
            h=${res[1]}
            w=$((${res[0]} / 2))
            create="termite --geometry ${w}x${h}+${x}+${y} --title=$1"
            ;;
        "scratchright")
            x=$((${res[0]} / 2))
            y=$w_top
            h=${res[1]}
            w=$((${res[0]} / 2))
            create="termite --geometry ${w}x${h}+${x}+${y} --title=$1"
            ;;
    esac
    echo "$x $y $h $w $create"
}

if [ "$1" == "service" ]; then

    [ ! -e $WM_FIFO ] && mkfifo $WM_FIFO
    [ ! -e $FIFO_TOP ] && mkfifo $FIFO_TOP
    [ ! -e $FIFO_BOT ] && mkfifo $FIFO_BOT
    sleep 3
    get_monitor_info

    # WM commands
    while true
    do
        if read line <$WM_FIFO; then
            arg=($line)
            case ${arg[0]} in
                "show") show ${arg[1]} || create ${arg[@]:1};;
                "hide") hide ${arg[1]};;
                *) hide ${arg[0]} || show ${arg[0]} || create ${arg[@]};;
            esac
        fi
        #echo $line
    done &

    while read line; do

        case $line in
            # bspc
            W*)
                top=""
                desktops=($(grep -oP '(?<=:)[a-zA-Z](Desktop)?[0-9](?=:)' <<< "$line"))
                dtop=1
                cur_desktop=$(bspc query -D -d)
                cur_monitor=$(($(bspc query -M | grep -n $(bspc query -M -m) | cut -c 1) - 1))
                datetime=$(date "+%h %d, %I:%M%P")

                for desktop in ${desktops[@]}
                do

                    [[ ${desktop:1} == $cur_desktop ]] && [ ${#monitor[@]} -gt 1 ] &&
                        icon="${icons[$(($dtop - 1))]}" ||
                        icon=" ${icons[$(($dtop - 1))]} "

                    case $desktop in
                        "o"*) top+=" $occ$icon$res ";;
                        "O"*|"F"*) top+=" $cur$icon$res ";;
                        "u"*|"U"*)
                            top+=" $urg$icon$res "
                            xdotool search --any --class --name paneltop windowmap
                            ;;
                        "L"*)
                            [ ${#monitor[@]} -gt 1 ] &&
                                top+="\t"
                                dtop=$(($dtop - 1))
                    esac

                    dtop=$(($dtop + 1))
                done
                ;;
            #conky
            c*)
                bot=$(cut -c 2- <<< "$line")
                # bat check!
                # email check!
                ;;
        esac

        echo -e "%{S$cur_monitor}%{c}%{B$COLOR_NORMAL} $top %{B-}%{F-}" > "$FIFO_TOP"
        echo -e "%{S$cur_monitor}%{c}%{B$COLOR_NORMAL}%{F#000000}  $bot  %{B-}%{F-}" > "$FIFO_BOT"

    done < <(bspc subscribe & conky -c $XDG_CONFIG_HOME/conky/pc_status.conf) &

    tail -f $FIFO_TOP | lemonbar -p -f "Icons-10" -n "paneltop" &
    tail -f $FIFO_BOT | lemonbar -pb -f "Icons-10" -f "M+ 1m-7" -n "panelbottom" &

    wait
else
    echo $@ >$WM_FIFO
fi
