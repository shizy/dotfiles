#!/bin/bash

# consider switching to gnupg-agent
if [[ -z "$(pgrep ssh-agent)" ]]; then
    ssh-agent -a $SSH_AUTH_SOCK -t 1800 > /dev/null
fi

[ -d "$XDG_CACHE_HOME/ssh/ssh_config" ] || bw sync --quiet
ssh_config=$(cat $XDG_CACHE_HOME/ssh/ssh_config)

# remove all documented ssh parameter switches (and their arguments) from the string, leaving the host
host=$(echo $@ | sed -E 's/(\s?-[BbcDEeFIiJLlmOopQRSWw]+\s*\S*)|(\s+-[46AaCfGgKkMNnqsTtVvXxYy]+)//g' | awk '{print $1;}' | sed -e 's/\S*@//g')

# if from git!
if [ "$(ps -o comm= $PPID)" == "git" ]; then
    host=$(echo $@ | awk '{print $1;}' | sed -e 's/\S*@//g')
fi

# parse ssh_config and find if there is a matching host
hosts=($(echo "$ssh_config" | grep -oP '(?<=^Host\s).*?$' | sed -e 's/\n/\ /g'))
match=''
ident=''
for cfg in ${hosts[@]:1}
do
    if [[ "$host" =~ "$cfg" ]]; then
        match=$cfg
    fi
done

# get IdentityFile from matched host in ssh_config
if [ ! -z ${match} ]; then
    ident=$(echo "$ssh_config" | sed -n -e "/Host $host/,/^$/ p" | grep -oP '(?<=IdentityFile\s).*?(?=$)')
fi

# get the IdentityFile record with the matching name from bw
if [ ! -z ${ident} ]; then
    pkfolderid=$(bw list folders --search PrivateKey | jq -r '.[].id')
    itemid=$(bw list items --folderid $pkfolderid --search $ident | jq -r '.[].id')
    bw get item $itemid | jq -r '.notes' | ssh-add -q /dev/stdin
    /usr/bin/ssh -F $XDG_CACHE_HOME/ssh/ssh_config -o UserKnownHostsFile=$XDG_CACHE_HOME/ssh/known_hosts -o AddKeysToAgent=yes $@
    ssh-add -D
else
    /usr/bin/ssh -F $XDG_CACHE_HOME/ssh/ssh_config -o UserKnownHostsFile=$XDG_CACHE_HOME/ssh/known_hosts -o AddKeysToAgent=yes $@
fi
