#!/bin/bash

timeout=900
resync=0

# install bitwarden if it does not exist
if [ ! -f $XDG_DATA_HOME/npm/bin/bw ]; then
    alacritty --no-live-config-reload -q --config-file=<(cat $XDG_CONFIG_HOME/alacritty/alacritty.yml | sed -e 's/#padding//g' -e 's/#light//g') --class="dispatch-small" -e bash -c \
        'npm install -g @bitwarden/cli && sudo pacman -S python-tldextract --noconfirm'
fi

# prompt to login if not logged in
$XDG_DATA_HOME/npm/bin/bw login --check > /dev/null
if [ $? -ne 0 ]; then
    alacritty --no-live-config-reload -q --config-file=<(cat $XDG_CONFIG_HOME/alacritty/alacritty.yml | sed -e 's/#padding//g' -e 's/#light//g') --class="dispatch-small" -e bash -c \
        'keyctl add user bw_session $($XDG_DATA_HOME/npm/bin/bw login --raw) @u'
fi

# prompt to unlock if session is invalid
key=$(keyctl request user bw_session &> /dev/null)
if [ $? -ne 0 ]; then
    alacritty --no-live-config-reload -q --config-file=<(cat $XDG_CONFIG_HOME/alacritty/alacritty.yml | sed -e 's/#padding//g' -e 's/#light//g') --class="dispatch-small" -e bash -c \
        'keyctl add user bw_session $($XDG_DATA_HOME/npm/bin/bw unlock --raw) @u'
    resync=1
fi

# get the session key
key=$(keyctl request user bw_session)
session=$(keyctl pipe $key)
keyctl timeout $key $timeout

# resync the vault
if [ $resync -eq 1 ] || [ "$1" == "private" ] || [ "$1" == "sync" ]; then
    $XDG_DATA_HOME/npm/bin/bw sync --quiet --session=$session > /dev/null

    # file drop any record with the custom field called "path"
    paths=($(bw list items | jq -r '.[] | select(.fields[]?.name == "path") | .id'))
    for pathid in ${paths[@]}
    do
        item=$(bw get item $pathid)
        path=$(echo $item | jq -r '.fields[] | select(.name == "path") | .value')
        mkdir -p $path > /dev/null
        echo "$(echo $item | jq -r '.notes')" > "$path/$(echo $item | jq -r '.name')"
    done
fi

# launched from qutebrowser
if [ "$1" == "qute" ]; then

    echo -e "\n\tRetrieving credentials..."

    # parse tld
    tld=$(tldextract ${QUTE_URL} | sed -e 's/^\s//g' -e 's/\s$//g' -e 's/\s/\./g')

    # filter entries by tld and store as json
    json=$($XDG_DATA_HOME/npm/bin/bw list items --url $tld --session=$session)

    # select from multiple entries
    if [[ $(echo $json | jq '. | length') > 1 ]]; then
        entries=$(echo $json | jq '.[] | (.name + " | " + .login.username)' | sed -e 's/"//g')
        selection=$(echo -e "$entries" | fzf | grep -Eo '^[^ |]+')
        json=$(echo $json | jq '.[] | select(.name == "'$selection'")')
    else
        json=$(echo $json | jq '.[0]')
    fi

    # parse username / pass from selection
    user=$(echo $json | jq '.login.username' | sed -e 's/"//g')
    pass=$(echo $json | jq '.login.password' | sed -e 's/"//g')
    json=""

    # pass the username / pass back to qute
    echo "fake-key \"${user}\"" > $QUTE_FIFO
    echo "fake-key <Tab>"       > $QUTE_FIFO
    echo "fake-key \"${pass}\"" > $QUTE_FIFO
    echo "enter-mode insert"    > $QUTE_FIFO

    exit
fi
if [ ! -z ${QUTE_FIFO+x} ]; then
    alacritty --no-live-config-reload -q --config-file=<(cat $XDG_CONFIG_HOME/alacritty/alacritty.yml | sed -e 's/#padding//g' -e 's/#light//g') --class="dispatch-small" -e bash -c "$LOCALDIR/bin/bw qute"
fi

# execute command
$XDG_DATA_HOME/npm/bin/bw --session=$session $@
